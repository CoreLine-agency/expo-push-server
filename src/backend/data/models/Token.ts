/*** AUTOGENERATED FILE: you can only modify parts of the file within <keep-*> tags ***/
// tslint:disable max-line-length no-duplicate-imports
import { Field, ID, ObjectType } from 'type-graphql';
import { Column, Entity, JoinColumn, ManyToOne, OneToMany, OneToOne, PrimaryGeneratedColumn } from 'typeorm';

import { TokenChannelSubscription } from './TokenChannelSubscription';

import * as auth from '../../utils/auth/auth-checkers';
import { IAuthorizable } from '../../utils/auth/IAuthorizable';
import { getInputOperationType } from '../../utils/get-input-operation-type';
import { TokenAuth } from '../auth/TokenAuth';
import { EntityId, EntityIdScalar } from '../EntityId';
import { TokenCreateInput } from '../inputs/TokenCreateInput';
import { TokenEditInput } from '../inputs/TokenEditInput';
import { TokenNestedInput } from '../inputs/TokenNestedInput';
import { IRequestContext } from '../IRequestContext';
import {  } from './update-operations/token-update-operations';

// <keep-imports>
// </keep-imports>

// <keep-decorators>
// </keep-decorators>
@Entity()
@ObjectType()
export class Token implements IAuthorizable {
  @Field((type) => EntityIdScalar)
  @PrimaryGeneratedColumn()
  public id: EntityId;

  public authorizationChecker = new TokenAuth(this);

  @Field(() => String)
  @Column({
    // <custom-column-args>
    // </custom-column-args>
  })
  public content: string;

  @OneToMany((type) => TokenChannelSubscription, (tokenChannelSubscription) => tokenChannelSubscription.token)
  @Field((returns) => [TokenChannelSubscription])
  public subscriptions: Promise<Array<TokenChannelSubscription>>;

  public async update(input: TokenCreateInput | TokenEditInput | TokenNestedInput, context: IRequestContext) {
    const data = input;
    if (getInputOperationType(this, input) === 'update') {
      await auth.assertCanUpdate(this, context);
    }
    Object.assign(this, data);

    context.modelsToSave.push(this);

    // <keep-update-code>
    // </keep-update-code>
    await auth.assertCanPersist(this, context);

    return this;
  }

  // <keep-methods>
  // </keep-methods>
}
